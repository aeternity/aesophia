contract T =
  entrypoint f(x, y) = 3
main contract IntegerAdderFactory =
  stateful payable entrypoint calculateSomething(x, t) =
//    let t = Chain.create(value = 5555) : T
    t.f(protected = true, gas = 999999999, value = 777777, 111, 222)
//    t.f()

/* 
contract IntegerAdder =
  entrypoint init() = ()
  entrypoint addIntegers(x, y) = x + y

contract IntegerAdderHolder =
  type state = IntegerAdder
  entrypoint init() = Chain.create() : IntegerAdder
  entrypoint get() = state

namespace IntegerAdderFactory =
  function new() =
    let i = Chain.create() : IntegerAdderHolder
    i.get()

main contract EnterpriseContract =
  entrypoint calculateSomething(x) =
    let adder = IntegerAdderFactory.new()
    adder.addIntegers(x, 2137)
*/